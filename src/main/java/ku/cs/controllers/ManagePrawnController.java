package ku.cs.controllers;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.scene.control.cell.PropertyValueFactory;
import ku.cs.models.*;
import ku.cs.services.*;

import java.io.IOException;
import java.util.ArrayList;

public class ManagePrawnController {
    @FXML private Button codeOneButton;
    @FXML private Button codeTwoButton;
    @FXML private Button codeThreeButton;
    @FXML private Button normalStatusButton;
    @FXML private Button sickStatusButton;
    @FXML private Button problemStatusButton;
    @FXML private TextArea textNote;
    @FXML private Label farmingLabel;
    @FXML private TextField dateTextField;
    @FXML private ListView<String> farmingListView;
    @FXML private TableView<Farming> farmingTableView;

    private String noteType;
    private String statusType;
    private ObservableList<Farming> ObservableList;
    private FarmingList farmingList;
    private DataSource<FarmingList> farmingListDataSource;
    private ManagePrawnList managePrawnList;
    private DataSource<ManagePrawnList> managePrawnListDataSource;


    @FXML
    public void initialize() {
        farmingListDataSource = new FarmingDataSource();
        farmingList = farmingListDataSource.readData();
        managePrawnListDataSource = new ManagePrawnDataSource();
        managePrawnList = managePrawnListDataSource.readData();

        showProductData();
        clearSelectedProduct();
        farmingTableView.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
            if (newValue != null) {
                showSelectedFarming(newValue);
            }
        });
    }

    private void showProductData() {
        farmingTableView.getItems().clear();
        farmingTableView.getColumns().clear();
        ObservableList = FXCollections.observableArrayList(farmingList.getFarmings());
        farmingTableView.setItems(ObservableList);
        ///แสดงแถวแนวตรง
        ArrayList<StringConfiguration> configs = new ArrayList<>();
        configs.add(new StringConfiguration("title:ID", "field:farmingID"));
        configs.add(new StringConfiguration("title:หมายเลข", "field:pondID"));


        for (StringConfiguration conf: configs) {
            TableColumn col = new TableColumn(conf.get("title"));
            col.setCellValueFactory(new PropertyValueFactory<>(conf.get("field")));
            farmingTableView.getColumns().add(col);
        }
    }
    public void  showSelectedFarming(Farming farming){
        farmingLabel.setText(farming.getPondID());
        if (farming.getFarmingStatus().equals("ปกติ")){
            this.normalStatusButton.setStyle("-fx-background-color: #FF8C00;");
            this.sickStatusButton.setStyle("-fx-background-color: #FFD700;");
            this.problemStatusButton.setStyle("-fx-background-color: #FFD700;");
        }else if(farming.getFarmingStatus().equals("ป่วย")){
            this.sickStatusButton.setStyle("-fx-background-color: #FF8C00;");
            this.normalStatusButton.setStyle("-fx-background-color: #FFD700;");
            this.problemStatusButton.setStyle("-fx-background-color: #FFD700;");
        }else{}
    }

    public Farming selectedFarming(){
        String selectedFarmingString = farmingListView.getSelectionModel().selectedItemProperty().get();
        System.out.println(selectedFarmingString);
        Farming farming = farmingList.getFarmingById(selectedFarmingString);
        return farming;
    }

    private void clearSelectedProduct() {
        farmingLabel.setText("");
    }

    @FXML
    private void pressSave() {
        try {
            int manageID = managePrawnList.count()+1;
            String manageIDString = "TK"+ manageID;
            String manageType = noteType;
            String manageNote = textNote.getText();
            String date = dateTextField.getText();
            String farmingId = selectedFarming().getFarmingID();

            if (managePrawnList.validateJavaDate(date)){
                ManagePrawn managePrawn = new ManagePrawn(manageIDString, manageType, manageNote, date, farmingId);
                managePrawn.insertToSql();
                Farming farming = farmingList.getFarmingById(farmingId);
                farming.setFarmingStatus(statusType);
                farming.updateToSql();
                System.out.println("บันทึกแล้ว");
            }else {
                System.out.println("ใส่วันที่ผิดพลาด");
            }
        }catch (Exception e) {
            System.err.println("ใส่ข้อมูลผิดพลาด");
        }
    }

    @FXML
    private void pressGoBack() {
        System.out.println("กลับไปหน้าก่อนหน้า");
    }

    @FXML
    private void pressOnCodeOneButton() {
        this.noteType = "วัดน้ำหนัก";
        showStatusCode(noteType);
        this.codeOneButton.setStyle("-fx-background-color: #FF8C00;");
        this.codeTwoButton.setStyle("-fx-background-color: #FFD700;");
        this.codeThreeButton.setStyle("-fx-background-color: #FFD700;");
    }

    @FXML
    private void pressOnCodeTwoButton() {
        this.noteType = "ให้ยา";
        showStatusCode(noteType);
        this.codeTwoButton.setStyle("-fx-background-color: #FF8C00;");
        this.codeOneButton.setStyle("-fx-background-color: #FFD700;");
        this.codeThreeButton.setStyle("-fx-background-color: #FFD700;");
    }

    @FXML
    private void pressOnCodeThreeButton() {
        this.noteType = "บันทึกปัญหา";
        showStatusCode(noteType);
        this.codeThreeButton.setStyle("-fx-background-color: #FF8C00;");
        this.codeOneButton.setStyle("-fx-background-color: #FFD700;");
        this.codeTwoButton.setStyle("-fx-background-color: #FFD700;");
    }

    @FXML
    private void normalStatusButton() {
        this.statusType = "ปกติ";
        showStatusCode(statusType);
        this.normalStatusButton.setStyle("-fx-background-color: #FF8C00;");
        this.sickStatusButton.setStyle("-fx-background-color: #FFD700;");
        this.problemStatusButton.setStyle("-fx-background-color: #FFD700;");
    }

    @FXML
    private void sickStatusButton() {
        this.statusType = "ป่วย";
        showStatusCode(statusType);
        this.sickStatusButton.setStyle("-fx-background-color: #FF8C00;");
        this.normalStatusButton.setStyle("-fx-background-color: #FFD700;");
        this.problemStatusButton.setStyle("-fx-background-color: #FFD700;");
    }

    @FXML
    private void problemStatusButton() {
        this.statusType = "เกิดปัญหา";
        showStatusCode(statusType);
        this.problemStatusButton.setStyle("-fx-background-color: #FF8C00;");
        this.normalStatusButton.setStyle("-fx-background-color: #FFD700;");
        this.sickStatusButton.setStyle("-fx-background-color: #FFD700;");
    }

    private void showStatusCode(String statusCode) {
        System.out.println("Status Code is " + statusCode);
    }


    @FXML
    public void BackButton(ActionEvent actionEvent){
        try {
            com.github.saacsos.FXRouter.goTo("staffHome");
        } catch (IOException e) {
            System.err.println("ไปที่หน้า home ไม่ได้");
            System.err.println("ให้ตรวจสอบการกำหนด route");
        }

    }
}